@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap, $gap: 0) {
	display: flex;
	flex-direction: $direction;
	justify-content: $justify;
	align-items: $align;
	flex-wrap: $wrap;

	@if $gap != 0 {
		gap: $gap;
	}
}

@mixin absolute($top: auto, $right: auto, $bottom: auto, $left: auto) {
	position: absolute;
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
}

@mixin truncate($lines: 1) {
	@if $lines == 1 {
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	@else {
		display: -webkit-box;
		-webkit-line-clamp: $lines;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
}

@mixin text-reset($margin: var(--sp-0), $padding: var(--sp-0)) {
	margin: $margin;
	padding: $padding;
}

@mixin list-reset( $margin: var(--sp-0), $padding: var(--sp-0)) {
	margin: $margin;
	padding: $padding;
	list-style: none;
}

@mixin grid($columns: 1, $gap: 0) {
	display: grid;
	grid-template-columns: repeat($columns, 1fr);

	@if $gap !=0 {
		gap: $gap;
	}
}

@mixin transition($property: all, $duration: 0.2s, $timing-function: linear) {
	transition: $property $duration $timing-function;
}

@mixin loading-animation($size: 30px) {
	width: $size;
	height: $size;
	animation: loader 1s infinite linear;

	@keyframes loader {
		0% {
			transform: rotate(0deg);
			border-radius: 50%;
		}

		50% {
			transform: rotate(90deg);
			background-color: var(--color-primary);
			border-radius: 0;
		}

		100% {
			transform: rotate(180deg);
			border-radius: 50%;
		}
	}
}

@mixin animation($name, $duration: 1s, $timing-function: ease, $delay: 0s, $iteration: 1, $direction: normal, $fill-mode: none) {
	animation: $name $duration $timing-function $delay $iteration $direction $fill-mode;
}